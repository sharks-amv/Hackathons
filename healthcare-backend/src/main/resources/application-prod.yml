# application-prod.yml - Production Configuration

server:
  port: 8443
  ssl:
    enabled: true
    key-store: file:/opt/healthcare/ssl/keystore.p12
    key-store-password: ${SSL_KEYSTORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: healthcare-api
    # Additional SSL security settings
    ciphers: TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
    enabled-protocols: TLSv1.3,TLSv1.2
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
  http2:
    enabled: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
    whitelabel:
      enabled: false

spring:
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      auto-commit: false
      transaction-isolation: TRANSACTION_READ_COMMITTED
      pool-name: HealthcareConnectionPool

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate  # Never auto-create in production
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        jdbc:
          time_zone: UTC
          batch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
    open-in-view: false

  # Security Configuration
  security:
    require-ssl: true
    headers:
      frame: DENY
      content-type: true

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: NON_NULL
    time-zone: UTC

  # Cache Configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=300s

# Application-specific Configuration
app:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET}  # Must be set as environment variable
    expiration: 900000     # 15 minutes
    refresh-expiration: 86400000  # 24 hours

  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}  # Must be set as environment variable

  # Rate Limiting (Strict for production)
  rate-limit:
    requests-per-minute: 60
    burst-capacity: 100

  # Audit Configuration
  audit:
    retention-days: 2555  # 7 years for compliance (HIPAA)
    cleanup-enabled: true

  # Password Policy (Strict for production)
  password:
    min-length: 14
    require-uppercase: true
    require-lowercase: true
    require-digits: true
    require-special: true
    max-age-days: 90

  # Session Configuration
  session:
    timeout: 1800  # 30 minutes

  # Security Configuration
  security:
    max-failed-attempts: 3
    account-lockout-duration: 1800  # 30 minutes
    password-history-count: 12
    force-password-change: true

# Logging Configuration
logging:
  level:
    com.hospital: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
    AUDIT: INFO
    SECURITY: WARN
    org.springframework.web: WARN
    org.apache.tomcat: WARN
    org.postgresql: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/healthcare/healthcare-api.log
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 90
      total-size-cap: 5GB

# Actuator Configuration (Minimal exposure for production)
management:
  endpoints:
    enabled-by-default: false
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      enabled: true
      show-details: when-authorized
      roles: ADMIN
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
  security:
    enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Health Check Configuration
health:
  database:
    enabled: true
  disk-space:
    enabled: true
    threshold: 10GB
  redis:
    enabled: true

# Production-specific properties
debug: false
trace: false

# Tomcat Configuration
server:
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000
    accesslog:
      enabled: true
      directory: /var/log/healthcare
      file-date-format: .yyyy-MM-dd
      pattern: "%h %l %u %t \"%r\" %s %b %D"
      rotate: true